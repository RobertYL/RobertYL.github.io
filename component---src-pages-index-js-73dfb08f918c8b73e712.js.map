{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","location","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postCounter","keywords","description","className","map","node","key","fields","slug","count","postClass","props","query","render"],"mappings":"qHAAA,gFAWMA,GAXN,oBAWkB,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQJ,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNK,SAAU,CAAC,SAAD,wCAGXT,EAAKE,KAAKC,aAAaO,aACtB,4BAAQC,UAAU,aAChB,wBAAIA,UAAU,mBACXX,EAAKE,KAAKC,aAAaO,cAI9B,yBAAKC,UAAU,aACZN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEZ,OADAL,IAEE,kBAAC,IAAD,CACEM,IAAKD,EAAKE,OAAOC,KACjBC,MAAOT,EACPK,KAAMA,EACNK,UAAS,gBA2CR,mBAAAC,GAAK,OAClB,kBAAC,cAAD,CACEC,MApCY,aAqCZC,OAAQ,SAAArB,GAAI,OACV,kBAACF,EAAD,eAAWC,SAAUoB,EAAMpB,SAAUoB,OAAK,EAACnB,KAAMA,GAAUmB","file":"component---src-pages-index-js-73dfb08f918c8b73e712.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, StaticQuery } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n// import Bio from \"../components/bio\"\r\nimport PostCard from \"../components/postCard\"\r\n\r\nimport \"../style/normalize.css\"\r\nimport \"../style/all.scss\"\r\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\r\nconst BlogIndex = ({ data }, location) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n  let postCounter = 0\r\n\r\n  return (\r\n    <Layout title={siteTitle}>\r\n      <SEO\r\n        title=\"Blog\"\r\n        keywords={[`devlog`, `blog`, `gatsby`, `javascript`, `react`]}\r\n      />\r\n      {/* <Bio /> */}\r\n      {data.site.siteMetadata.description && (\r\n        <header className=\"page-head\">\r\n          <h2 className=\"page-head-title\">\r\n            {data.site.siteMetadata.description}\r\n          </h2>\r\n        </header>\r\n      )}\r\n      <div className=\"post-feed\">\r\n        {posts.map(({ node }) => {\r\n          postCounter++\r\n          return (\r\n            <PostCard\r\n              key={node.fields.slug}\r\n              count={postCounter}\r\n              node={node}\r\n              postClass={`post`}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst indexQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM D, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1360) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={indexQuery}\r\n    render={data => (\r\n      <BlogIndex location={props.location} props data={data} {...props} />\r\n    )}\r\n  />\r\n)\r\n"],"sourceRoot":""}