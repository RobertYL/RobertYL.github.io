{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagPageTemplate","render","props","this","tag","pageContext","posts","data","allMarkdownRemark","edges","siteTitle","site","siteMetadata","title","location","charAt","toUpperCase","slice","keywords","className","totalCount","map","node","key","fields","slug","postClass","React","Component","pageQuery"],"mappings":"sNAOMA,E,kGACJC,OAAA,WACE,IAAMC,EAAQC,KAAKD,MACbE,EAAMD,KAAKD,MAAMG,YAAYD,IAC7BE,EAAQH,KAAKD,MAAMK,KAAKC,kBAAkBC,MAC1CC,EAAYP,KAAKD,MAAMK,KAAKI,KAAKC,aAAaC,MAEpD,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKD,MAAMY,SAAUD,MAAOH,GAC5C,kBAAC,IAAD,CAEEG,MAAK,KAAMT,EAAIW,OAAO,GAAGC,cAAgBZ,EAAIa,MAAM,IACnDC,SAAU,CAAC,GAAGd,EAAJ,wCAEZ,4BAAQe,UAAU,iBAChB,wBAAIA,UAAU,mBAAd,IAAkCf,EAAlC,IAAwCF,EAAMK,KAAKC,kBAAkBY,WAArE,MAEJ,yBAAKD,UAAU,aACZb,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,OAAOC,KACjBH,KAAMA,EACNI,UAAS,e,GAvBOC,IAAMC,WAiCrB5B,YAER,IAAM6B,EAAS","file":"component---src-templates-tag-page-js-da83871c470cd7140196.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostCard from \"../components/postCard\"\r\n\r\nclass TagPageTemplate extends React.Component {\r\n  render() {\r\n    const props = this.props\r\n    const tag = this.props.pageContext.tag\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          // title={`#${tag}`}\r\n          title={`#${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\r\n          keywords={[`${tag}`, `blog`, `gatsby`, `javascript`, `react`]}\r\n        />\r\n        <header className=\"tag-page-head\">\r\n          <h1 className=\"page-head-title\">#{tag}({props.data.allMarkdownRemark.totalCount})</h1>\r\n        </header>\r\n      <div className=\"post-feed\">\r\n        {posts.map(({ node }) => {\r\n          return (\r\n            <PostCard\r\n              key={node.fields.slug}\r\n              node={node}\r\n              postClass={`post`}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TagPageTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query PostByTag($tag: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1360) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}